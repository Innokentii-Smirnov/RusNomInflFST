load stack ../../ParadigmFeatures/Alternations/GetAlternations.bin
invert net
define GetAlternations;
read lexc ../../ParadigmFeatures/NonStandEndings/GetNonStandEndings.lexc
define NonStandEndingsLexicon;
source ../../LetterClasses.foma
source ../../ParadigmFeatures.foma
define Intervening Alternation*;
define Following DeclType (Gender) (Number) (NumberHom) (ParadigmDefects) GrammRazr (Animacy) (Gender);
define Insertion Letter+ Intervening 0:NonStandEnding* .o. [NonStandEndingsLexicon / Intervening];
define NonStandEndingsExceptions Insertion Following;
define Alt Alternation*;
define r1 [..] -> %+Nse1 || [%+Alt12 | %+Alt14 | %+Alt15] Alt _ DeclType %+Masc;
define r2 [..] -> %+Nse1 || {ко} Irr Alt _ DeclType;
define r3 [..] (->) %+Nse1 || и Irr {ще} Alt _ DeclType Feature+ %+Masc .#.;
define r4 [..] -> %+Nse2 || [а|я] Irr н и Irr н %+Alt6 Alt _ DeclType;
define r5	[..] -> %+Nse3 || [%+Alt6 | %+Alt14 | %+Alt15] Alt (%+Nse1) (%+Nse2) _ DeclType,
		%+Alt12 Alt (%+Nse1) 					        _ DeclType [%+Neut|%+Fem],
		[С|ь]{ко́} Alt (%+Nse1)					      _ %+Subst1 %+Neut,
		{ико} Alt (%+Nse1) 							      _ DeclType %+Neut;
define r6 [..] -> %+Nse4 || [К {ля} | С {ря}] Alt (%+Nse1) _ DeclType; 
define NonStandEndingsRules r1 .o. r2 .o. r3 .o. r4 .o. r5 .o. r6;
define GetNonStandEndings GetAlternations .o. [NonStandEndingsExceptions .P. NonStandEndingsRules];
